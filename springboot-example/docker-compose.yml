version: '3.3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: elastic
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      discovery.type: single-node
    volumes:
      - app_logs:/logs:rw              # Persistence data
  
  logstash:
    build: 
      context: ./logstash
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro                # Pipeline configuration
      - app_logs:/logs:rw                                                  # Persistence data
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    container_name: kibana
    ports:
      - "5601:5601"
    restart: on-failure
    depends_on:
      - elasticsearch
  
  mysql-docker-container:
    image: mysql:latest
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=spring_app_db
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=test123
    volumes:
      - /data/mysql
  
  springboot-example:
    image: springboot-example
    container_name: springboot-example
    build:
      context: ./
      dockerfile: Dockerfile
    #restart: on-failure
    depends_on:
      - mysql-docker-container
      - elasticsearch
      - logstash
    ports:
      - 8087:8080
    volumes:
      - app_logs:/logs:rw              #Persistence data
volumes:
  app_logs: